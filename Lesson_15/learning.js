/*
Что такое функция и как она работает - понятно.

Нужно запомнить, что каждая функция решает 1 конкретную задачу.
И называется так, чтобы было понятно, какую задачу она выполняет.

Интересно вот что: переменные, объявленные внутри функции,
будут локальными и будут существовать только в самой функции,
но не будут за ее пределами.

Если какая-то требуемая переменная не существует в теле функции, она берется
из внешнего окружения (вне данной функции).

Если внешняя и локальная переменные одинаковые, будет использоваться локальная
как с наибольшим приоритетом.

Также в функциях можно задавать переменные по умолчанию. Если аргумент не задан,
он определяется как undefined. Но лучше задавать default значения:
*/
function someFoo(one, two = "Not defined") {
    console.log(`There are some args: ${one} and ${two}`);
}

someFoo();
someFoo("AAAAAA");
someFoo("AAAAAAA", "BBBBBBB");

// По умолчанию можно даже присваивать значения другой функции:
/*
function xxx( one=setTheDefault() ) {
    ...
}
*/

/*
С return тоже все ясно, но при этом можно сделать возврат пустой.
После return просто ничего не писать. Вернется undefined:
*/
function noReturn(flag) {
    if (!flag) {
        return;
    }
    return flag;
}

console.log( noReturn(true) );
console.log( noReturn(false) );

